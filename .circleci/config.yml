# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
    # specify the version you desire here
    - image: circleci/openjdk:8-jdk

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
      CC_TEST_REPORTER_ID: 9c42d3a4550d91a58691a24c61e35a38c5081d3da8739bf7801a533a6b28745a

    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "pom.xml" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run: mvn dependency:go-offline

    - save_cache:
        paths:
        - ~/.m2
        key: v1-dependencies-{{ checksum "pom.xml" }}

    # run tests!
    - run:
        name: Setup Code Climate test-reporter
        command: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
    - run:
        name: Run unit tests
        command: |
          ./cc-test-reporter before-build
          mvn integration-test
          JACOCO_SOURCE_PATH=src/main/java ./cc-test-reporter \
            format-coverage target/site/jacoco/jacoco.xml     \
            --input-type jacoco
          ./cc-test-reporter upload-coverage
    - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
        path: target/surefire-reports
    - store_artifacts: # store the uberjar as an artifact
        path: target/priceyyy-1.0.0-SNAPSHOT-jar-with-dependencies.jar
    - store_artifacts: # store test reports
        path: target/surefire-reports
